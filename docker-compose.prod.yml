version: "3" # specify docker-compose version
services: # services list
  server: # service name
    container_name: project_server # container name
    env_file: # environment variables
      - ./server/.env
    environment: # environment variables
      - NODE_ENV=production
    build: # build context
      context: ./server
      target: production
    ports: # port mapping
      - "3001:3001"
    links: # link to other services
      - mongo
    networks: # network name
      - mongodb
      - client
    depends_on: # depend on other services
      - mongo
    tty: true # allocate pseudo-TTY

  mongo: # service name
    container_name: project_mongo # container name
    restart: always # restart policy
    image: "mongo:latest" # docker image
    ports: # port mapping
      - "27017:27017"
    volumes: # volume mapping
      - ./database:/data/db
    networks: # network name
      - mongodb

  app: # service name
    container_name: client_app # container name
    environment: # environment variables
      - NODE_ENV=production
    build: # build context
      target: production
      context: ./client
    ports: # port mapping
      - 8080:80
    tty: true # allocate pseudo-TTY
    networks: # network name
      - client

  elasticsearch: # service name
    container_name: elasticsearch # container name
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0 # docker image
    networks: # network name
      - elk
    ports: # port mapping
      - "9200:9200"
    volumes: # volume mapping
      - ./elk/elasticsearch/data:/usr/share/elasticsearch/data
    environment: # environment variables
      - "discovery.type=single-node"

  kibana: # service name
    container_name: kibana # container name
    image: docker.elastic.co/kibana/kibana:8.9.0 # docker image
    environment: # environment variables
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
    networks: # network name
      - elk
    ports: # port mapping
      - "5601:5601"
    volumes: # volume mapping
      - ./elk/kibana/data:/usr/share/kibana/data
      - ./elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml

  logstash: # service name
    container_name: logstash # container name
    image: docker.elastic.co/logstash/logstash:8.9.0 # docker image
    environment: # environment variables
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    networks: # network name
      - elk
    ports: # port mapping
      - "5044:5044"
    volumes: # volume mapping
      - ./elk/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    depends_on: # depend on other services
      - elasticsearch

  filebeat: # service name
    container_name: filebeat # container name
    image: docker.elastic.co/beats/filebeat:8.9.0 # docker image
    user: root # user
    environment: # environment variables
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    volumes: # volume mapping
      - ./elk/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks: # network name
      - elk
    depends_on: # depend on other services
      - elasticsearch
      - logstash

networks: # network name
  mongodb:
    driver: bridge
  elk:
    driver: bridge
  client:
    driver: bridge
